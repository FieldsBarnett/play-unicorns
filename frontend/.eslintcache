[{"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\index.tsx":"1","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\App.tsx":"2","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\context\\socket.ts":"3","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Lobby.tsx":"4","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Board.tsx":"5","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\context\\models.ts":"6","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Opponents.tsx":"7","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Stable.tsx":"8","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Deck.tsx":"9","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Hand.tsx":"10","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\FaceCard.tsx":"11","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\PlaceHolder.tsx":"12","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\CardsOverlay.tsx":"13"},{"size":227,"mtime":1607817670315,"results":"14","hashOfConfig":"15"},{"size":576,"mtime":1607845135409,"results":"16","hashOfConfig":"15"},{"size":195,"mtime":1608010483387,"results":"17","hashOfConfig":"15"},{"size":2115,"mtime":1608057329716,"results":"18","hashOfConfig":"15"},{"size":1974,"mtime":1608011050693,"results":"19","hashOfConfig":"15"},{"size":555,"mtime":1607730432908,"results":"20","hashOfConfig":"15"},{"size":1768,"mtime":1607753298418,"results":"21","hashOfConfig":"15"},{"size":2388,"mtime":1607797115055,"results":"22","hashOfConfig":"15"},{"size":1432,"mtime":1608012130696,"results":"23","hashOfConfig":"15"},{"size":1555,"mtime":1607887651815,"results":"24","hashOfConfig":"15"},{"size":1279,"mtime":1608009910803,"results":"25","hashOfConfig":"15"},{"size":404,"mtime":1607750329659,"results":"26","hashOfConfig":"15"},{"size":877,"mtime":1608052032807,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1at2yay",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\index.tsx",[],["57","58"],"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\App.tsx",["59"],"import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Lobby from './Lobby';\nimport socket from '../context/socket';\nimport Board from './Board';\n\nexport default function App() {\n  const [gameState, setGameState] = useState<any>();\n  const [name, setName] = useState<String>(\"\");\n  useEffect(() => {\n    socket.once('gameState', (gameState: any) => {\n      console.log(gameState);\n      setGameState(gameState);\n    });\n  }, [1]);\n\n  return (\n    gameState ? <Board gameState={gameState} myName={name}/> : <Lobby name={name} setName={setName}/>\n  );\n}\n","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\context\\socket.ts",["60"],"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Lobby.tsx",["61","62"],"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Board.tsx",["63","64"],"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\context\\models.ts",[],"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Opponents.tsx",["65","66","67"],"import React, { useState } from 'react';\r\nimport { CSSTransition, SwitchTransition, TransitionGroup } from 'react-transition-group';\r\nimport { Hand } from './Hand';\r\nimport './Opponents.css'\r\nimport { Stable } from './Stable';\r\n\r\nexport function Opponents(props: any) {\r\n    const [selectedOpponent, setSelectedOpponent] = useState(\"\");\r\n\r\n    if (props.opponentStates.length > 0\r\n        && !selectedOpponent) setSelectedOpponent(props.opponentStates[Math.floor(props.opponentStates.length/2)].name);\r\n\r\n    let opponentState = props.opponentStates.find((state:any) => state.name == selectedOpponent)\r\n                        || {cards: [], name: \"\", hand: []};\r\n\r\n    return(\r\n        <div>\r\n            <SwitchTransition>\r\n                <CSSTransition classNames=\"opponent-board\" timeout={200} key={opponentState.name}>\r\n                    <div className=\"opponent-board\">\r\n                        <Stable cards={opponentState.stable} isSelf={false} selectedCard={props.selectedCard} playerName={opponentState.name}/>\r\n                        <Hand hideHand={true} isOpponent={true} cards={opponentState.hand} selectedCard={props.selectedCard}/>\r\n                    </div>\r\n                </CSSTransition>\r\n            </SwitchTransition>\r\n            <div className=\"opponent-name-container\">\r\n                {props.opponentStates.map((eachState: any) => {\r\n                    return (\r\n                        <div\r\n                        className={eachState.name == opponentState.name ? 'selected':''}\r\n                        onMouseOver={() => setSelectedOpponent(eachState.name)}>\r\n                            {eachState.name}\r\n                        </div>);\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Stable.tsx",[],"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Deck.tsx",["68","69"],"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\Hand.tsx",[],"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\FaceCard.tsx",["70"],"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\PlaceHolder.tsx",[],"C:\\Users\\field\\Desktop\\PlayUnicorns\\frontend\\src\\components\\CardsOverlay.tsx",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":15,"column":7,"nodeType":"78","endLine":15,"endColumn":8},{"ruleId":"79","severity":1,"message":"80","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":16},{"ruleId":"76","severity":1,"message":"83","line":20,"column":6,"nodeType":"84","endLine":20,"endColumn":9,"suggestions":"85"},{"ruleId":"76","severity":1,"message":"77","line":20,"column":7,"nodeType":"78","endLine":20,"endColumn":8},{"ruleId":"86","severity":1,"message":"87","line":27,"column":83,"nodeType":"88","messageId":"89","endLine":27,"endColumn":85},{"ruleId":"76","severity":1,"message":"77","line":33,"column":7,"nodeType":"78","endLine":33,"endColumn":8},{"ruleId":"79","severity":1,"message":"90","line":2,"column":43,"nodeType":"81","messageId":"82","endLine":2,"endColumn":58},{"ruleId":"86","severity":1,"message":"91","line":13,"column":77,"nodeType":"88","messageId":"89","endLine":13,"endColumn":79},{"ruleId":"86","severity":1,"message":"91","line":30,"column":51,"nodeType":"88","messageId":"89","endLine":30,"endColumn":53},{"ruleId":"79","severity":1,"message":"92","line":15,"column":6,"nodeType":"81","messageId":"82","endLine":15,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":29,"column":9,"nodeType":"78","endLine":29,"endColumn":10},{"ruleId":"79","severity":1,"message":"93","line":10,"column":22,"nodeType":"81","messageId":"82","endLine":10,"endColumn":33},{"ruleId":"76","severity":1,"message":"77","line":15,"column":9,"nodeType":"78","endLine":15,"endColumn":10},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","@typescript-eslint/no-unused-vars","'Socket' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["96"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'TransitionGroup' is defined but never used.","Expected '===' and instead saw '=='.","'Position' is defined but never used.","'setPosition' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [props]",{"range":"99","text":"100"},[677,680],"[props]"]